all_platforms:
  - name: windows
    type: Unity::VM
    image: package-ci/win10:stable
    flavor: b1.large
  - name: macOS
    type: Unity::VM::osx
    image: package-ci/mac:stable
    flavor: m1.mac
  - name: ubuntu
    type: Unity::VM
    image: package-ci/ubuntu:stable
    flavor: b1.large

all_tests:
  - name: integration_tests
    editors: [2019.4, 2020.3, 2021.2, 2022.1, trunk]
    args: --type package-tests
    commands:
    variables:
  - name: isolation_tests
    editors: [2020.3, 2021.2, 2022.1, trunk]
    args: --type isolation-tests --enable-load-and-test-isolation
    commands:
    variables:
  - name: vetting_tests
    editors: [2019.4, 2020.3, 2021.2, 2022.1, trunk]
    args: --type vetting-tests --platform editmode
    commands:
    variables:
     - "UPMCI_PROMOTION: 1"
  - name: promotion_tests
    editors: [2019.4, 2020.3, 2021.2, 2022.1, trunk]
    args: --type promotion-audit --platform editmode
    commands:
    variables:
      - "UPMCI_PROMOTION: 1"
  - name: coverage
    editors: [trunk]
    args: --type package-tests --enable-code-coverage --code-coverage-options 'generateAdditionalMetrics;generateHtmlReport;assemblyFilters:+Cinemachine,+com.unity.cinemachine.editor' --extra-utr-arg=--coverage-results-path=%YAMATO_SOURCE_DIR%/upm-ci~/test-results/CoverageResults
    commands:
      - git clone -b latest --single-branch git@github.cds.internal.unity3d.com:unity/re.codecoverage.tools.git coverage-tools
      - coverage-tools/codecov.bat --reports "upm-ci~/test-results/CoverageResults/**/*.xml" --name {{ platform.name }}_{{ editor.version }} --flags "{{ platform.name }},{{ editor.version }}" -v
    variables:

all_configurations:
  ci:
    test_names: [integration_tests, isolation_tests, coverage]
    platform_names: [ubuntu]
  publish:
    test_names: [integration_tests, isolation_tests, vetting_tests]
    platform_names: [windows, macOS, ubuntu]
  promote:
    test_names: [promotion_tests, vetting_tests]
    platform_names: [windows]
